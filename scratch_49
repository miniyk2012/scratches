from asteval import Interpreter
import re
from datetime import datetime, timedelta, date
aeval = Interpreter(symtable={
    'datetime': datetime,
    'timedelta': timedelta,
    'date': date,
    'mydict': {1:'x'},
})
txt = """nmax = 1e8
a = sqrt(nmax)
"""

aeval("x = sqrt(3)")
print aeval.symtable['x']

aeval.symtable['y'] = 100
aeval('print y')

aeval('x = ceil(4.5)')
print aeval.symtable['x']



code = """
xsum = 0
for i in range(10):
    xsum += i*sqrt(1.0)
    if i % 4 == 0:
        xsum = xsum + 1
print "sum = ", xsum
"""
print ('***')
print aeval("""'big' if 5>6 else 'small'""")
print ('+++')
print aeval("""
""")

# writing function
code = """
def func(a, b, norm=1.0):
    return (a + b)/norm
"""
aeval(code)
aeval("print func(1, 3, norm=10.0)")
print aeval.symtable['func'](1,5,norm=10)
aeval.symtable.update({'myfunc': aeval.symtable['func']})
aeval.symtable.pop('func')
aeval("print myfunc(1, 3, norm=10.0)")

x = {1:[1,2], 2:[2,3]}
x.update({1: x[1]})
print x
x.pop(1)
print x


code = """
if 5 > 4:
    result= 6
else:
    result= 7
"""
code2 = """"
asdf
afsd result
"""
aeval(code)
print aeval.symtable.get('result')

if re.search(r'\bresult\b', code2):
    print True
else:
    print False

print '*' * 100


aeval('x==5+5)')
if aeval.error:
    aeval.error_msg = None

print '*'*10

aeval('y=5+4)')
if aeval.error:
    print aeval.error_msg


print '*'*10
