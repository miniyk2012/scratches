from scipy.optimize import minimize
import math
x = [
119.930491, 119.931951, 119.938989, 119.944267, 119.945126, 119.936585, 119.93607, 119.940534,
119.928603, 119.924355, 119.945168, 119.948387, 119.936929, 119.928174, 119.938517, 119.942293,
119.948301,]
y = [
31.741015, 31.7393, 31.73638, 31.739555, 31.736416, 31.734044, 31.728751, 31.733861, 31.737402,
31.732584, 31.729262, 31.738935, 31.741927, 31.729956, 31.72762, 31.726853, 31.731343,]
d = [ 4, 5, 4, 3, 5, 6, 10, 5, 5, 4, 4, 2, 1, 3, 2, 10, 10, ]
z = zip(x,y)
print(z)
num = len(x)
def fun(z):
    result = 0
    for i in range(num):
        result += math.sqrt((z[0]-x[i])**2 + (z[1]-y[i])**2)*d[i]
    return result

bnds = ((0, None), (0, None))
res = minimize(fun, (1, 1), method='SLSQP', bounds=bnds)

print res